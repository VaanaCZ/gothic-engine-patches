// T_SWIM_2_HANG fixes for Union
// Created by Vaana and Auronen

#engine [G1]
    #patch [T_SWIM_2_HANG fix]
        // PC_SpecialMove
        #assembler [callClimbLedge]
            mov     ecx, [0x0086CCA0] ; zinput
            mov     edx, [ecx]
            push    3
            call    dword ptr [edx+4]
            call    0x00777558        ; __ftol
            cmp     eax, ebx
            jz      0x006137D7
            mov     ecx, esi
            call    0x006292D0        ; Swim_ClimbLedge
//            mov     ebx, 1
//            mov     [esi+131Ch], ebx
            jmp     0x006137D7
        #/assembler

        #assembler [0x006137AD]
            mov     ecx, esi
            call    0x00629290        ; Swim_CanClimbLedge
            test    eax, eax
            jnz     $callClimbLedge
            orgcode
        #/assembler

        // RbtAvoidObstacles
        #assembler [0x00751711]
            mov     ecx, [esi+9B8h]
            call    0x00746650        ; GetActionMode
            cmp     eax, 5
            jnz     end
            mov     ecx, [esi+9B8h]
            call    0x006292D0        ; Swim_ClimbLedge
            jmp     0x00751693
        end:
            orgcode
        #/assembler

        // Swim_ClimbLedge
        #assembler [0x0062937D]
            mov     ecx, esi
            call    0x00625A20        ; StopTurnAnis
            orgcode
        #/assembler

        // CheckFallStates
        INT memString = CreateMemString("T_SWIM_2_HANG")
        #assembler [0x0062C1F0]
            mov     esi, ecx
            mov     ecx, [esi+68h]
            push    $memString
            call    0x0047EC50        ; GetAniIDFromAniName
            mov     ecx, [esi+68h]
            push    eax
            call    0x0046D1E0        ; GetAniFromAniID
            mov     ecx, [esi+68h]
            push    eax
            call    0x0046D220        ; IsAniActive
            test    eax, eax
            jz      end
            ret
        end:
            mov     ecx, esi
            orgcode
        #/assembler

        // PC_SpecialMove
        #assembler [0x00613A48]
            mov     ecx, [esi+68h]
            push    $memString
            call    0x0047EC50        ; GetAniIDFromAniName
            mov     ecx, [esi+68h]
            push    eax
            call    0x0046D1E0        ; GetAniFromAniID
            mov     ecx, [esi+68h]
            push    eax
            call    0x0046D220        ; IsAniActive
            test    eax, eax
            jnz     0x00613A55
            orgcode
        #/assembler
    #/patch
#/engine

#engine [G1A]
    #patch [T_SWIM_2_HANG fix]
        // PC_SpecialMove
        #assembler [callClimbLedge]
            mov     ecx, [0x008B2798] ; zinput
            mov     edx, [ecx]
            push    3
            call    dword ptr [edx+4]
            call    0x007BB318        ; __ftol
            cmp     eax, ebx
            jz      0x00636B90
            mov     ecx, esi
            call    0x0064E530        ; Swim_ClimbLedge
//            mov     ebx, 1
//            mov     [esi+131Ch], ebx
            jmp     0x00636B90
        #/assembler

        #assembler [0x00636B64]
            mov     ecx, esi
            call    0x0064E4F0        ; Swim_CanClimbLedge
            test    eax, eax
            jnz     $callClimbLedge
            orgcode
        #/assembler

        // RbtAvoidObstacles
        #assembler [0x0079392B]
            mov     ecx, [esi+9C0h]
            call    0x007874C0        ; GetActionMode
            cmp     eax, 5
            jnz     end
            mov     ecx, [esi+9C0h]
            call    0x0064E530        ; Swim_ClimbLedge
            jmp     0x007938A3
        end:
            orgcode
        #/assembler

        // Swim_ClimbLedge
        #assembler [0x0064E5E7]
            mov     ecx, ebp
            call    0x0064A7C0        ; StopTurnAnis
            orgcode
        #/assembler

        // CheckFallStates
        INT memString = CreateMemString("T_SWIM_2_HANG")
        #assembler [0x00651810]
            mov     esi, ecx
            mov     ecx, [esi+68h]
            push    $memString
            call    0x00489660        ; GetAniIDFromAniName
            mov     ecx, [esi+68h]
            push    eax
            call    0x00475680        ; GetAniFromAniID
            mov     ecx, [esi+68h]
            push    eax
            call    0x004756D0        ; IsAniActive
            test    eax, eax
            jz      end
            ret
        end:
            mov     ecx, esi
            orgcode
        #/assembler
    #/patch
#/engine

#engine [G2]
    #patch [T_SWIM_2_HANG fix]
        // PC_SpecialMove
        #assembler [callClimbLedge]
            mov     ecx, [0x008C2FF8] ; zinput
            mov     edx, [ecx]
            push    3
            call    dword ptr [edx+4]
            call    0x007C4A88        ; __ftol
            cmp     eax, ebx
            jz      0x0063D614
            mov     ecx, esi
            call    0x00655AB0        ; Swim_ClimbLedge
//            mov     ebx, 1
//            mov     [esi+131Ch], ebx
            jmp     0x0063D614
        #/assembler

        #assembler [0x0063D5E8]
            mov     ecx, esi
            call    0x00655A70        ; Swim_CanClimbLedge
            test    eax, eax
            jnz     $callClimbLedge
            orgcode
        #/assembler

        // RbtAvoidObstacles
        #assembler [0x0079E1E1]
            mov     ecx, [esi+8ECh]
            call    0x007914E0        ; GetActionMode
            cmp     eax, 5
            jnz     end
            mov     ecx, [esi+8ECh]
            call    0x00655AB0        ; Swim_ClimbLedge
            jmp     0x0079E163
        end:
            orgcode
        #/assembler

        // Swim_ClimbLedge
        #assembler [0x00655B5D]
            mov     ecx, esi
            call    0x00651CB0        ; StopTurnAnis
            orgcode
        #/assembler

        // CheckFallStates
        INT memString = CreateMemString("T_SWIM_2_HANG")
        #assembler [0x00658E80]
            mov     esi, ecx
            mov     ecx, [esi+68h]
            push    $memString
            call    0x0060A9B0        ; GetAniIDFromAniName
            mov     ecx, [esi+68h]
            push    eax
            call    0x00471E30        ; GetAniFromAniID
            mov     ecx, [esi+68h]
            push    eax
            call    0x00471E70        ; IsAniActive
            test    eax, eax
            jz      end
            ret
        end:
            mov     ecx, esi
            orgcode
        #/assembler
    #/patch
#/engine

#engine [G2A]
    #patch [T_SWIM_2_HANG fix]
        // PC_SpecialMove
        #assembler [callClimbLedge]
            mov     ecx, [0x008D1650] ; zinput
            mov     edx, [ecx]
            push    3
            call    dword ptr [edx+4]
            call    0x007D0F48        ; __ftol
            cmp     eax, ebx
            jz      0x00699E64
            mov     ecx, esi
            call    0x006B2440        ; Swim_ClimbLedge
//            mov     ebx, 1
//            mov     [esi+131Ch], ebx
            jmp     0x00699E64
        #/assembler

        #assembler [0x00699E38]
            mov     ecx, esi
            call    0x006B2400        ; Swim_CanClimbLedge
            test    eax, eax
            jnz     $callClimbLedge
            orgcode
        #/assembler

        // RbtAvoidObstacles
        #assembler [0x006876E1]
            mov     ecx, [esi+980h]
            call    0x0067A890        ; GetActionMode
            cmp     eax, 5
            jnz     end
            mov     ecx, [esi+980h]
            call    0x006B2440        ; Swim_ClimbLedge
            jmp     0x00687663
        end:
            orgcode
        #/assembler

        // Swim_ClimbLedge
        #assembler [0x006B24ED]
            mov     ecx, esi
            call    0x006AE530        ; StopTurnAnis
            orgcode
        #/assembler

        // CheckFallStates
        INT memString = CreateMemString("T_SWIM_2_HANG")
        #assembler [0x006B5810]
            mov     esi, ecx
            mov     ecx, [esi+68h]
            push    $memString
            call    0x00612070        ; GetAniIDFromAniName
            mov     ecx, [esi+68h]
            push    eax
            call    0x00472F50        ; GetAniFromAniID
            mov     ecx, [esi+68h]
            push    eax
            call    0x00472F90        ; IsAniActive
            test    eax, eax
            jz      end
            ret
        end:
            mov     ecx, esi
            orgcode
        #/assembler
    #/patch
#/engine